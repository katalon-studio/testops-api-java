/*
 * Katalon TestOps API reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.katalon.testops.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * BuildLog
 */
@JsonPropertyOrder({
  BuildLog.JSON_PROPERTY_LOG_FILE_URL,
  BuildLog.JSON_PROPERTY_CONTENT,
  BuildLog.JSON_PROPERTY_NAME,
  BuildLog.JSON_PROPERTY_ACTIONS
})
@JsonTypeName("BuildLog")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BuildLog implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LOG_FILE_URL = "logFileUrl";
  private String logFileUrl;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ACTIONS = "actions";
  private List<Map<String, String>> actions = null;


  public BuildLog logFileUrl(String logFileUrl) {
    
    this.logFileUrl = logFileUrl;
    return this;
  }

   /**
   * Get logFileUrl
   * @return logFileUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOG_FILE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogFileUrl() {
    return logFileUrl;
  }


  public void setLogFileUrl(String logFileUrl) {
    this.logFileUrl = logFileUrl;
  }


  public BuildLog content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    this.content = content;
  }


  public BuildLog name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BuildLog actions(List<Map<String, String>> actions) {
    
    this.actions = actions;
    return this;
  }

  public BuildLog addActionsItem(Map<String, String> actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Map<String, String>> getActions() {
    return actions;
  }


  public void setActions(List<Map<String, String>> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildLog buildLog = (BuildLog) o;
    return Objects.equals(this.logFileUrl, buildLog.logFileUrl) &&
        Objects.equals(this.content, buildLog.content) &&
        Objects.equals(this.name, buildLog.name) &&
        Objects.equals(this.actions, buildLog.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logFileUrl, content, name, actions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildLog {\n");
    sb.append("    logFileUrl: ").append(toIndentedString(logFileUrl)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

