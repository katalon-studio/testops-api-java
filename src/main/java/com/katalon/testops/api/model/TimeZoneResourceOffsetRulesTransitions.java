/*
 * Katalon TestOps API reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.katalon.testops.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.katalon.testops.api.model.TimeZoneResourceOffsetRulesDuration;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * TimeZoneResourceOffsetRulesTransitions
 */
@JsonPropertyOrder({
  TimeZoneResourceOffsetRulesTransitions.JSON_PROPERTY_INSTANT,
  TimeZoneResourceOffsetRulesTransitions.JSON_PROPERTY_DURATION,
  TimeZoneResourceOffsetRulesTransitions.JSON_PROPERTY_GAP,
  TimeZoneResourceOffsetRulesTransitions.JSON_PROPERTY_OVERLAP,
  TimeZoneResourceOffsetRulesTransitions.JSON_PROPERTY_DATE_TIME_AFTER,
  TimeZoneResourceOffsetRulesTransitions.JSON_PROPERTY_DATE_TIME_BEFORE
})
@JsonTypeName("TimeZoneResource_offset_rules_transitions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TimeZoneResourceOffsetRulesTransitions implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_INSTANT = "instant";
  private OffsetDateTime instant;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private TimeZoneResourceOffsetRulesDuration duration;

  public static final String JSON_PROPERTY_GAP = "gap";
  private Boolean gap;

  public static final String JSON_PROPERTY_OVERLAP = "overlap";
  private Boolean overlap;

  public static final String JSON_PROPERTY_DATE_TIME_AFTER = "dateTimeAfter";
  private OffsetDateTime dateTimeAfter;

  public static final String JSON_PROPERTY_DATE_TIME_BEFORE = "dateTimeBefore";
  private OffsetDateTime dateTimeBefore;


  public TimeZoneResourceOffsetRulesTransitions instant(OffsetDateTime instant) {
    
    this.instant = instant;
    return this;
  }

   /**
   * Get instant
   * @return instant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSTANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getInstant() {
    return instant;
  }


  public void setInstant(OffsetDateTime instant) {
    this.instant = instant;
  }


  public TimeZoneResourceOffsetRulesTransitions duration(TimeZoneResourceOffsetRulesDuration duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeZoneResourceOffsetRulesDuration getDuration() {
    return duration;
  }


  public void setDuration(TimeZoneResourceOffsetRulesDuration duration) {
    this.duration = duration;
  }


  public TimeZoneResourceOffsetRulesTransitions gap(Boolean gap) {
    
    this.gap = gap;
    return this;
  }

   /**
   * Get gap
   * @return gap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGap() {
    return gap;
  }


  public void setGap(Boolean gap) {
    this.gap = gap;
  }


  public TimeZoneResourceOffsetRulesTransitions overlap(Boolean overlap) {
    
    this.overlap = overlap;
    return this;
  }

   /**
   * Get overlap
   * @return overlap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OVERLAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOverlap() {
    return overlap;
  }


  public void setOverlap(Boolean overlap) {
    this.overlap = overlap;
  }


  public TimeZoneResourceOffsetRulesTransitions dateTimeAfter(OffsetDateTime dateTimeAfter) {
    
    this.dateTimeAfter = dateTimeAfter;
    return this;
  }

   /**
   * Get dateTimeAfter
   * @return dateTimeAfter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATE_TIME_AFTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateTimeAfter() {
    return dateTimeAfter;
  }


  public void setDateTimeAfter(OffsetDateTime dateTimeAfter) {
    this.dateTimeAfter = dateTimeAfter;
  }


  public TimeZoneResourceOffsetRulesTransitions dateTimeBefore(OffsetDateTime dateTimeBefore) {
    
    this.dateTimeBefore = dateTimeBefore;
    return this;
  }

   /**
   * Get dateTimeBefore
   * @return dateTimeBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATE_TIME_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateTimeBefore() {
    return dateTimeBefore;
  }


  public void setDateTimeBefore(OffsetDateTime dateTimeBefore) {
    this.dateTimeBefore = dateTimeBefore;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeZoneResourceOffsetRulesTransitions timeZoneResourceOffsetRulesTransitions = (TimeZoneResourceOffsetRulesTransitions) o;
    return Objects.equals(this.instant, timeZoneResourceOffsetRulesTransitions.instant) &&
        Objects.equals(this.duration, timeZoneResourceOffsetRulesTransitions.duration) &&
        Objects.equals(this.gap, timeZoneResourceOffsetRulesTransitions.gap) &&
        Objects.equals(this.overlap, timeZoneResourceOffsetRulesTransitions.overlap) &&
        Objects.equals(this.dateTimeAfter, timeZoneResourceOffsetRulesTransitions.dateTimeAfter) &&
        Objects.equals(this.dateTimeBefore, timeZoneResourceOffsetRulesTransitions.dateTimeBefore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instant, duration, gap, overlap, dateTimeAfter, dateTimeBefore);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeZoneResourceOffsetRulesTransitions {\n");
    sb.append("    instant: ").append(toIndentedString(instant)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    gap: ").append(toIndentedString(gap)).append("\n");
    sb.append("    overlap: ").append(toIndentedString(overlap)).append("\n");
    sb.append("    dateTimeAfter: ").append(toIndentedString(dateTimeAfter)).append("\n");
    sb.append("    dateTimeBefore: ").append(toIndentedString(dateTimeBefore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

