/*
 * Katalon TestOps API reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.katalon.testops.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.katalon.testops.api.model.ExternalProjectResource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ExternalReleaseResource
 */
@JsonPropertyOrder({
  ExternalReleaseResource.JSON_PROPERTY_ID,
  ExternalReleaseResource.JSON_PROPERTY_RELEASE_ID,
  ExternalReleaseResource.JSON_PROPERTY_DESCRIPTION,
  ExternalReleaseResource.JSON_PROPERTY_NAME,
  ExternalReleaseResource.JSON_PROPERTY_ARCHIVED,
  ExternalReleaseResource.JSON_PROPERTY_RELEASED,
  ExternalReleaseResource.JSON_PROPERTY_EXTERNAL_PROJECT,
  ExternalReleaseResource.JSON_PROPERTY_WEB_URL
})
@JsonTypeName("ExternalReleaseResource")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExternalReleaseResource implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_RELEASE_ID = "releaseId";
  private String releaseId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ARCHIVED = "archived";
  private Boolean archived;

  public static final String JSON_PROPERTY_RELEASED = "released";
  private Boolean released;

  public static final String JSON_PROPERTY_EXTERNAL_PROJECT = "externalProject";
  private ExternalProjectResource externalProject;

  public static final String JSON_PROPERTY_WEB_URL = "webUrl";
  private String webUrl;


  public ExternalReleaseResource id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public ExternalReleaseResource releaseId(String releaseId) {
    
    this.releaseId = releaseId;
    return this;
  }

   /**
   * Get releaseId
   * @return releaseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELEASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReleaseId() {
    return releaseId;
  }


  public void setReleaseId(String releaseId) {
    this.releaseId = releaseId;
  }


  public ExternalReleaseResource description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ExternalReleaseResource name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ExternalReleaseResource archived(Boolean archived) {
    
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getArchived() {
    return archived;
  }


  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public ExternalReleaseResource released(Boolean released) {
    
    this.released = released;
    return this;
  }

   /**
   * Get released
   * @return released
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELEASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReleased() {
    return released;
  }


  public void setReleased(Boolean released) {
    this.released = released;
  }


  public ExternalReleaseResource externalProject(ExternalProjectResource externalProject) {
    
    this.externalProject = externalProject;
    return this;
  }

   /**
   * Get externalProject
   * @return externalProject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExternalProjectResource getExternalProject() {
    return externalProject;
  }


  public void setExternalProject(ExternalProjectResource externalProject) {
    this.externalProject = externalProject;
  }


  public ExternalReleaseResource webUrl(String webUrl) {
    
    this.webUrl = webUrl;
    return this;
  }

   /**
   * Get webUrl
   * @return webUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEB_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebUrl() {
    return webUrl;
  }


  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalReleaseResource externalReleaseResource = (ExternalReleaseResource) o;
    return Objects.equals(this.id, externalReleaseResource.id) &&
        Objects.equals(this.releaseId, externalReleaseResource.releaseId) &&
        Objects.equals(this.description, externalReleaseResource.description) &&
        Objects.equals(this.name, externalReleaseResource.name) &&
        Objects.equals(this.archived, externalReleaseResource.archived) &&
        Objects.equals(this.released, externalReleaseResource.released) &&
        Objects.equals(this.externalProject, externalReleaseResource.externalProject) &&
        Objects.equals(this.webUrl, externalReleaseResource.webUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, releaseId, description, name, archived, released, externalProject, webUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalReleaseResource {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    releaseId: ").append(toIndentedString(releaseId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    externalProject: ").append(toIndentedString(externalProject)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

