/*
 * Katalon TestOps API reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.katalon.testops.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.katalon.testops.api.model.GitRepositoryResource;
import com.katalon.testops.api.model.JobResource;
import com.katalon.testops.api.model.TestSuiteCollectionResource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * TestProjectResource
 */
@JsonPropertyOrder({
  TestProjectResource.JSON_PROPERTY_ID,
  TestProjectResource.JSON_PROPERTY_NAME,
  TestProjectResource.JSON_PROPERTY_DESCRIPTION,
  TestProjectResource.JSON_PROPERTY_UPLOAD_FILE_ID,
  TestProjectResource.JSON_PROPERTY_PROJECT_ID,
  TestProjectResource.JSON_PROPERTY_TEAM_ID,
  TestProjectResource.JSON_PROPERTY_CREATED_AT,
  TestProjectResource.JSON_PROPERTY_LATEST_JOB,
  TestProjectResource.JSON_PROPERTY_UPLOAD_FILE_NAME,
  TestProjectResource.JSON_PROPERTY_TYPE,
  TestProjectResource.JSON_PROPERTY_GIT_REPOSITORY,
  TestProjectResource.JSON_PROPERTY_TEST_SUITE_COLLECTIONS
})
@JsonTypeName("TestProjectResource")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TestProjectResource implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_UPLOAD_FILE_ID = "uploadFileId";
  private Long uploadFileId;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private Long projectId;

  public static final String JSON_PROPERTY_TEAM_ID = "teamId";
  private Long teamId;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_LATEST_JOB = "latestJob";
  private JobResource latestJob;

  public static final String JSON_PROPERTY_UPLOAD_FILE_NAME = "uploadFileName";
  private String uploadFileName;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    KS("KS"),
    
    GIT("GIT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_GIT_REPOSITORY = "gitRepository";
  private GitRepositoryResource gitRepository;

  public static final String JSON_PROPERTY_TEST_SUITE_COLLECTIONS = "testSuiteCollections";
  private List<TestSuiteCollectionResource> testSuiteCollections = null;


  public TestProjectResource id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public TestProjectResource name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TestProjectResource description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public TestProjectResource uploadFileId(Long uploadFileId) {
    
    this.uploadFileId = uploadFileId;
    return this;
  }

   /**
   * Get uploadFileId
   * @return uploadFileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UPLOAD_FILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getUploadFileId() {
    return uploadFileId;
  }


  public void setUploadFileId(Long uploadFileId) {
    this.uploadFileId = uploadFileId;
  }


  public TestProjectResource projectId(Long projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getProjectId() {
    return projectId;
  }


  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }


  public TestProjectResource teamId(Long teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTeamId() {
    return teamId;
  }


  public void setTeamId(Long teamId) {
    this.teamId = teamId;
  }


  public TestProjectResource createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public TestProjectResource latestJob(JobResource latestJob) {
    
    this.latestJob = latestJob;
    return this;
  }

   /**
   * Get latestJob
   * @return latestJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LATEST_JOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobResource getLatestJob() {
    return latestJob;
  }


  public void setLatestJob(JobResource latestJob) {
    this.latestJob = latestJob;
  }


  public TestProjectResource uploadFileName(String uploadFileName) {
    
    this.uploadFileName = uploadFileName;
    return this;
  }

   /**
   * Get uploadFileName
   * @return uploadFileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UPLOAD_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUploadFileName() {
    return uploadFileName;
  }


  public void setUploadFileName(String uploadFileName) {
    this.uploadFileName = uploadFileName;
  }


  public TestProjectResource type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public TestProjectResource gitRepository(GitRepositoryResource gitRepository) {
    
    this.gitRepository = gitRepository;
    return this;
  }

   /**
   * Get gitRepository
   * @return gitRepository
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GIT_REPOSITORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GitRepositoryResource getGitRepository() {
    return gitRepository;
  }


  public void setGitRepository(GitRepositoryResource gitRepository) {
    this.gitRepository = gitRepository;
  }


  public TestProjectResource testSuiteCollections(List<TestSuiteCollectionResource> testSuiteCollections) {
    
    this.testSuiteCollections = testSuiteCollections;
    return this;
  }

  public TestProjectResource addTestSuiteCollectionsItem(TestSuiteCollectionResource testSuiteCollectionsItem) {
    if (this.testSuiteCollections == null) {
      this.testSuiteCollections = new ArrayList<>();
    }
    this.testSuiteCollections.add(testSuiteCollectionsItem);
    return this;
  }

   /**
   * Get testSuiteCollections
   * @return testSuiteCollections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEST_SUITE_COLLECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TestSuiteCollectionResource> getTestSuiteCollections() {
    return testSuiteCollections;
  }


  public void setTestSuiteCollections(List<TestSuiteCollectionResource> testSuiteCollections) {
    this.testSuiteCollections = testSuiteCollections;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestProjectResource testProjectResource = (TestProjectResource) o;
    return Objects.equals(this.id, testProjectResource.id) &&
        Objects.equals(this.name, testProjectResource.name) &&
        Objects.equals(this.description, testProjectResource.description) &&
        Objects.equals(this.uploadFileId, testProjectResource.uploadFileId) &&
        Objects.equals(this.projectId, testProjectResource.projectId) &&
        Objects.equals(this.teamId, testProjectResource.teamId) &&
        Objects.equals(this.createdAt, testProjectResource.createdAt) &&
        Objects.equals(this.latestJob, testProjectResource.latestJob) &&
        Objects.equals(this.uploadFileName, testProjectResource.uploadFileName) &&
        Objects.equals(this.type, testProjectResource.type) &&
        Objects.equals(this.gitRepository, testProjectResource.gitRepository) &&
        Objects.equals(this.testSuiteCollections, testProjectResource.testSuiteCollections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, uploadFileId, projectId, teamId, createdAt, latestJob, uploadFileName, type, gitRepository, testSuiteCollections);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestProjectResource {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    uploadFileId: ").append(toIndentedString(uploadFileId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    latestJob: ").append(toIndentedString(latestJob)).append("\n");
    sb.append("    uploadFileName: ").append(toIndentedString(uploadFileName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    gitRepository: ").append(toIndentedString(gitRepository)).append("\n");
    sb.append("    testSuiteCollections: ").append(toIndentedString(testSuiteCollections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

