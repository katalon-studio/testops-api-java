/*
 * Katalon TestOps API reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.katalon.testops.api.api;

import com.katalon.testops.api.model.UserResource;
import com.katalon.testops.api.model.UserSettingResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Adds users to a Team. Returns the added User detail.
     *
     * The user issuing this request must be the Admin of the team.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignUserTeamTest() {
        Long teamId = null;
        List<Long> newUserIds = null;
        List<UserResource> response = api.assignUserTeam(teamId, newUserIds);

        // TODO: test validations
    }
    
    /**
     * Change the avatar of the current User. Returns the updated User detail.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeAvatarTest() {
        String uploadedPath = null;
        UserResource response = api.changeAvatar(uploadedPath);

        // TODO: test validations
    }
    
    /**
     * Change name for current user.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeNameTest() {
        String firstName = null;
        String lastName = null;
        UserResource response = api.changeName(firstName, lastName);

        // TODO: test validations
    }
    
    /**
     * Updates the User Settings detail. Returns the updated User Settings detail.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOrUpdate2Test() {
        UserSettingResource userSettingResource = null;
        UserSettingResource response = api.createOrUpdate2(userSettingResource);

        // TODO: test validations
    }
    
    /**
     * Downloads the avatar of the current User. Returns the current avatar file.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadAvatarTest() {
        api.downloadAvatar();

        // TODO: test validations
    }
    
    /**
     * Returns the User Settings detail.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void get10Test() {
        UserSettingResource response = api.get10();

        // TODO: test validations
    }
    
    /**
     * Returns the current User detail.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMeTest() {
        UserResource response = api.getMe();

        // TODO: test validations
    }
    
    /**
     * Removes a User from a Team. Returns the removed User detail.
     *
     * The user issuing this request must be the Admin of the team.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeUserTest() {
        Long teamId = null;
        Long userId = null;
        UserResource response = api.removeUser(teamId, userId);

        // TODO: test validations
    }
    
}
