/*
 * Katalon TestOps API reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.katalon.testops.api.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.katalon.testops.api.model.OrganizationFeatureFlagResource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrganizationResource
 */
public class OrganizationResourceTest {
    private final OrganizationResource model = new OrganizationResource();

    /**
     * Model tests for OrganizationResource
     */
    @Test
    public void testOrganizationResource() {
        // TODO: test OrganizationResource
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'role'
     */
    @Test
    public void roleTest() {
        // TODO: test role
    }

    /**
     * Test the property 'orgFeatureFlag'
     */
    @Test
    public void orgFeatureFlagTest() {
        // TODO: test orgFeatureFlag
    }

    /**
     * Test the property 'quotaKSE'
     */
    @Test
    public void quotaKSETest() {
        // TODO: test quotaKSE
    }

    /**
     * Test the property 'machineQuotaKSE'
     */
    @Test
    public void machineQuotaKSETest() {
        // TODO: test machineQuotaKSE
    }

    /**
     * Test the property 'quotaEngine'
     */
    @Test
    public void quotaEngineTest() {
        // TODO: test quotaEngine
    }

    /**
     * Test the property 'machineQuotaEngine'
     */
    @Test
    public void machineQuotaEngineTest() {
        // TODO: test machineQuotaEngine
    }

    /**
     * Test the property 'usedKSE'
     */
    @Test
    public void usedKSETest() {
        // TODO: test usedKSE
    }

    /**
     * Test the property 'usedEngine'
     */
    @Test
    public void usedEngineTest() {
        // TODO: test usedEngine
    }

    /**
     * Test the property 'quotaTestOps'
     */
    @Test
    public void quotaTestOpsTest() {
        // TODO: test quotaTestOps
    }

    /**
     * Test the property 'usedTestOps'
     */
    @Test
    public void usedTestOpsTest() {
        // TODO: test usedTestOps
    }

    /**
     * Test the property 'numberUser'
     */
    @Test
    public void numberUserTest() {
        // TODO: test numberUser
    }

    /**
     * Test the property 'quotaFloatingEngine'
     */
    @Test
    public void quotaFloatingEngineTest() {
        // TODO: test quotaFloatingEngine
    }

    /**
     * Test the property 'usedFloatingEngine'
     */
    @Test
    public void usedFloatingEngineTest() {
        // TODO: test usedFloatingEngine
    }

    /**
     * Test the property 'canCreateOfflineKSE'
     */
    @Test
    public void canCreateOfflineKSETest() {
        // TODO: test canCreateOfflineKSE
    }

    /**
     * Test the property 'canCreateOfflineRE'
     */
    @Test
    public void canCreateOfflineRETest() {
        // TODO: test canCreateOfflineRE
    }

    /**
     * Test the property 'subscriptionExpiryDateEngine'
     */
    @Test
    public void subscriptionExpiryDateEngineTest() {
        // TODO: test subscriptionExpiryDateEngine
    }

    /**
     * Test the property 'subscriptionExpiryDateKSE'
     */
    @Test
    public void subscriptionExpiryDateKSETest() {
        // TODO: test subscriptionExpiryDateKSE
    }

    /**
     * Test the property 'subscriptionExpiryDateFloatingEngine'
     */
    @Test
    public void subscriptionExpiryDateFloatingEngineTest() {
        // TODO: test subscriptionExpiryDateFloatingEngine
    }

    /**
     * Test the property 'subscriptionExpiryDateTestOps'
     */
    @Test
    public void subscriptionExpiryDateTestOpsTest() {
        // TODO: test subscriptionExpiryDateTestOps
    }

    /**
     * Test the property 'subscribed'
     */
    @Test
    public void subscribedTest() {
        // TODO: test subscribed
    }

    /**
     * Test the property 'ksePaygo'
     */
    @Test
    public void ksePaygoTest() {
        // TODO: test ksePaygo
    }

    /**
     * Test the property 'krePaygo'
     */
    @Test
    public void krePaygoTest() {
        // TODO: test krePaygo
    }

    /**
     * Test the property 'paygoQuota'
     */
    @Test
    public void paygoQuotaTest() {
        // TODO: test paygoQuota
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'subdomainUrl'
     */
    @Test
    public void subdomainUrlTest() {
        // TODO: test subdomainUrl
    }

    /**
     * Test the property 'strictDomain'
     */
    @Test
    public void strictDomainTest() {
        // TODO: test strictDomain
    }

    /**
     * Test the property 'logoUrl'
     */
    @Test
    public void logoUrlTest() {
        // TODO: test logoUrl
    }

    /**
     * Test the property 'samlSSO'
     */
    @Test
    public void samlSSOTest() {
        // TODO: test samlSSO
    }

    /**
     * Test the property 'kreLicense'
     */
    @Test
    public void kreLicenseTest() {
        // TODO: test kreLicense
    }

    /**
     * Test the property 'testOpsPackage'
     */
    @Test
    public void testOpsPackageTest() {
        // TODO: test testOpsPackage
    }

    /**
     * Test the property 'testOpsBasicReason'
     */
    @Test
    public void testOpsBasicReasonTest() {
        // TODO: test testOpsBasicReason
    }

}
